@using BlazorGoogleLogin.Shared.Models.present.toShow
@using BlazorGoogleLogin.Shared.Models.present.toAdd
@using BlazorGoogleLogin.Shared.Models.present.toEdit
@using BlazorGoogleLogin.Client.Components
@using Microsoft.AspNetCore.Components.Web

<div class="overlay @firstTimeOnboardingClass" @onclick="getElementBounds" id="tutorialOverlay">

    @if (IsActive && firstOnboarding == false)
    {

        @*        <div class="@highlightClass" style="@($"left:{HighlightArea.Left}; top:{HighlightArea.Top}; width:{HighlightArea.Width}; height:{HighlightArea.Height};")"></div>*@
        <div style="width: 100%;display: flex;justify-content: space-around;">

            <div style="@($"top:{HighlightArea.Top+HighlightArea.Height+20}px; position:{positionAttr};") width: 70%;display: flex;flex-direction: row;column-gap: 4vw;align-items: center;justify-content: space-around;">
                <img id="guideArrow" src="./css/images/onboarding-arrow.svg" style="width: 9vw;" />
                <div id="expBubble">@expContent</div>
            </div>
        </div>
    }
    else if (firstOnboarding)
    {
        <div class="firstIntroduction">
            <div style="font-weight: 600;">אז איך מתמצאים פה?</div>
            <div>
                <span>נתחיל בסיור שלנו :)</span>
                <br />
                <span>אפשר להתקדם בלחיצה על המסך.</span>
            </div>
            <div style="text-align: center; margin-top: 25vh;">
                <img src="./css/images/one-finger-tap.svg" style="height:10vh" />
            </div>
        </div>
    }
</div>





@code {


    [Parameter]
    public int userID { get; set; }
    /// <summary>
    /// is the overlay active
    /// </summary>
    [Parameter]
    public bool IsActive { get; set; }

    /// <summary>
    /// the borders of the highlighted element
    /// </summary>
    [Parameter]
    public ElementBounds HighlightArea { get; set; }

    /// <summary>
    /// the id of the element in the page
    /// </summary>
    [Parameter]
    public string elementID { get; set; }

    [Parameter]
    public bool firstOnboarding { get; set; }

    [Parameter]
    public EventCallback<string> continueOnboarding { get; set; }

    [Parameter]
    public EventCallback<bool> onboardingDone { get; set; }

    /// <summary>
    /// the content in the explanation speech bubble
    /// </summary>
    string expContent = "";

    string firstTimeOnboardingClass = "";
    string highlightClass = "highlight";

    List<string> onBoardingElementsIDs = new List<string>()
    {
        "presentOnBoarding1", "monthStatusBtn", "presentOnBoarding2", "presentOnboarding3","firstCatOnboarding", "AddNewCat", "catOptBtn","addNewSubCat","existingSubCat","editOrAddSubCatWindow","importanceExp"
    };

    string positionAttr = "absolute";


    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Tutorial OnInitializedAsync- " + elementID);
        if (firstOnboarding == true)
        {
            firstTimeOnboardingClass = "firstOnBoarding";
        }
        else
        {
            ContinueTutorialPhase(elementID);
        }
    }

    public async Task getElementBounds()
    {
        int elementIndex = onBoardingElementsIDs.IndexOf(elementID);

        string currentElement = "";


        if (elementIndex <= -1)
        {
            currentElement = onBoardingElementsIDs[0];
            HideHighlight();
            continueOnboarding.InvokeAsync(currentElement);

        }
        else if (elementIndex > -1 && elementIndex < onBoardingElementsIDs.Count)
        {
            currentElement = onBoardingElementsIDs[elementIndex + 1];
            firstOnboarding = false;
            firstTimeOnboardingClass = "";
            HideHighlight();
            continueOnboarding.InvokeAsync(currentElement);
        }
        else if (elementIndex >= onBoardingElementsIDs.Count)
        {
            HideHighlight();
            onboardingDone.InvokeAsync(true);
            //will update the DB that the user has passed his onboarding
        }

    }


    public void HideHighlight()
    {
        IsActive = false;
    }

    /// <summary>
    /// changes the explanation text
    /// </summary>
    public void ContinueTutorialPhase(string currentElement)
    {
        IsActive = true;
        firstOnboarding = false;
        Console.WriteLine(currentElement+": Highlighted area bounds- w: " + HighlightArea.Width + ", h:" + HighlightArea.Height + ", t: " + HighlightArea.Top + ", L: " + HighlightArea.Left);
        switch (currentElement)
        {
            case "presentOnBoarding1":
                expContent = "זאת סביבת מבט אל ההווה- עמוד הבית של האפליקציה. בה נראה איך עובר החודש, ונכניס את ההוצאות וההכנסות במהלכו.";
                positionAttr = "relative";
                highlightClass = "highlight";
                break;
            case "monthStatusBtn":
                expContent = "בלחיצה על כפתור 'מצב החודש כרגע' ניתן לראות נקודות חשובות על התזרים החודשי עד כה.";
                highlightClass = "highlight";
                break;
            case "presentOnBoarding2":
                expContent = "זוהי שורת החיפוש, בה ניתן לחפש על פי קטגוריות.";
                highlightClass = "highlight";
                break;
            case "presentOnboarding3":
                expContent = "עבור כל חודש, נוכל לעבור בין הוצאות להכנסות.";
                highlightClass = "highlight";
                break;

            case "presentOnboarding4":
                expContent = "כל יצירה של תת קטגוריה מלווה בהגדרת תקציב עבורה. התקציב הוא התקרה של ההוצאות באותה תת קטגוריה. הוא יעבור מחודש לחודש ונוכל לערוך אותו במסך 'מבט על' בכל עת.";
                highlightClass = "highlight";
                break;
            case "presentOnboarding5":
                expContent = "במידה ובוצעה חריגה מהתקציב תוצג ההודעה הזו. היא תציג את סכום החריגה, ותציע להעביר את הסכום הזה או גבוה יותר (במידת הצורך), מתתי הקטגוריות שהוגדרו בעדיפות 'רצון'.";
                highlightClass = "highlight";
                break;
            case "presentOnboarding10":
                expContent = "אחד מהמפתחות החשובים ביותר להצלחה הוא התמדה. לכן, כל שבוע בו נזין לפחות הוצאה אחת, השבוע יתווסף לרצף.";
                highlightClass = "highlight";
                break;
            case "firstCatOnboarding":
                expContent = "זאת קטגוריה, היא בעצם תחום גדול וכולל בחיים, אליו קשורות הוצאות או הכנסות.";
                highlightClass = "";

                break;

            case "AddNewCat":
                expContent = "לחיצה על “קטגוריה חדשה” - תיצור אותה.";
                break;
            case "catOptBtn":
                expContent = "לחיצה על 3 נקודות תפתח אפשרויות של עריכה ו/או מחיקה.";
                break;
            case "addNewSubCat":
                expContent = "לחיצה על ״תת קטגוריה חדשה״- תיצור אותה.";
                break;
            case "existingSubCat":
                expContent = "אלו הן תתי הקטגוריות, תת קטגוריה היא תחום ספציפי יותר תחת הקטגוריה הכללית, ואליה נוכל לשייך הוצאות והכנסות באמצעות לחיצה על ה+. גם כאן, יצרנו מראש תתי קטגוריות כדי להקל(גם אותן אפשר למחוק). ";
                break;
            case "editOrAddSubCatWindow":
                expContent = "לאחר לחיצה על ";
                break;
            case "importanceExp":
                expContent = "לאחר לחיצה על ";
                break;
        }

    }
}
