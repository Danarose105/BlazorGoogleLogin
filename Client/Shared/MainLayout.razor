@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager
@using BlazorGoogleLogin.Client.Components



@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
<div>
    <main>
        <article>
            @Body
        </article>
        <AuthorizeView>
            <Authorized>

        @if (!NavManager.Uri.Contains("LogoutPage"))
        {
           @* if (!NavManager.Uri.EndsWith("/") || !NavManager.Uri.EndsWith("CountOnIt_MalkaInbalDana"))
            {*@
                if (NavManager.Uri.EndsWith("CountOnIt_MalkaInbalDana/HomePage") || NavManager.Uri.EndsWith("HomePage") && !NavManager.Uri.Contains("FutureHomePage"))
                {
                    <div id="expDiv">


                        <div id="expBtn" @onclick="@(()=>expBubbleToolTip("presentHomePage"))"><img src="./css/images/q-with-shadow.svg" style="height: 3rem;" /></div>
                        @if (expBubbleOpen)
                        {

                            <TutorialOverlay elementID="@elementToExp" closeOverlay="closeExpOverlay"></TutorialOverlay>
                        }

                    </div>
                }

                if (NavManager.Uri.Contains("ProfilePage"))
                {
                    <div id="expDiv">

                        <div id="expBtn" @onclick="@(()=>expBubbleToolTip("ProfilePage"))"><img src="./css/images/q-with-shadow.svg" style="height: 3rem;" /></div>
                        @if (expBubbleOpen)
                        {

                            <TutorialOverlay elementID="@elementToExp" closeOverlay="closeExpOverlay"></TutorialOverlay>
                        }

                    </div>
                }

                if (NavManager.Uri.Contains("TransactionsOverview"))
                {
                    <div id="expDiv">

                        <div id="expBtn" @onclick="@(()=>expBubbleToolTip("odTransOverview"))"><img src="./css/images/q-with-shadow.svg" style="height: 3rem;" /></div>
                        @if (expBubbleOpen)
                        {

                            <TutorialOverlay elementID="@elementToExp" closeOverlay="closeExpOverlay"></TutorialOverlay>
                        }

                    </div>
                }

                <div id="@hideNav" class="bottom-nav" @ref="navBar">
                    <button class="navBtn" style="opacity:60%">מבט לעבר<img src="./css/images/past.svg" /></button>
                    <div class="NavLines"> </div>
                    <button class="navBtn" style="@currentPresentNavPage" @onclick="goToPresentHomePage">מבט להווה<img src="./css/images/present.svg" /></button>
                    <div class="NavLines"> </div>
                    <button class="navBtn" style="@currentFuturetNavPage" @onclick="goToFutureHomePage">מבט לעתיד<img src="./css/images/future.svg" /></button>
                </div>
           @* }*@
        }
            </Authorized>
        </AuthorizeView>

    </main>
</div>

@code {

    //[CascadingParameter]
    //private UserDTO user { get; set; }

    bool isScrollingDown = false;
    string hideNav => isScrollingDown ? "nav-hidden" : "bottomNav";
    string currentPresentNavPage = "font-weight:600; color:#6775F4;";
    string currentFuturetNavPage = "";

    private ElementReference navBar;

    bool expBubbleOpen=false;
    string elementToExp = "";
    string styleAdjustment = "";


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("navScroll.init", navBar);
        }
    }

    public void Dispose()
    {
        JSRuntime.InvokeVoidAsync("navScroll.dispose");
    }

    public void goToPresentHomePage()
    {

        currentPresentNavPage = "font-weight:600; color:#6775F4;";
        currentFuturetNavPage = "";
        closeExpOverlay();
        NavManager.NavigateTo("./HomePage");
    }

    public void goToFutureHomePage()
    {

        currentFuturetNavPage = "font-weight:600; color:#6775F4;";
        currentPresentNavPage = "";
        closeExpOverlay();
        NavManager.NavigateTo("./FutureHomePage");
    }

    public void expBubbleToolTip(string elementName)
    {
        expBubbleOpen = !expBubbleOpen;
        if (expBubbleOpen)
        {
            elementToExp = elementName;
            if (elementToExp == "ProfilePage")
            {
                styleAdjustment = "right:0";
            }
            else
            {
                styleAdjustment = "";
            }
        }
    }

    public void closeExpOverlay()
    {
        expBubbleOpen = false;
    }
}